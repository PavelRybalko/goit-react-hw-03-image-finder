{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","services/pixabay-api.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","className","s","Searchbar","state","query","handleChange","value","target","setState","toLowerCase","handleSubmit","e","preventDefault","trim","toast","error","props","onSubmit","SearchForm","this","type","button","buttonLabel","onChange","input","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","item","onClick","data-largeimageurl","largeImageURL","src","webformatURL","alt","tags","image","ImageGallery","items","map","id","Loader","spinner","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","currentTarget","window","addEventListener","removeEventListener","activeImage","url","createPortal","Overlay","Button","allyProps","defaultProps","api","fetchImages","searchQuery","page","pageSize","fetch","then","res","ok","json","Promise","reject","Error","App","images","showButton","showModal","showLoader","onChangeQuery","options","pixabayApi","hits","totalHits","length","success","prevState","catch","finally","scrollTo","top","documentElement","offsetHeight","behavior","openModal","largeimageurl","dataset","toggleModal","prevProps","message","aria-label","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1bea8a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2C_lB\",\"image\":\"ImageGalleryItem_image__34S7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1HzY5\",\"Modal\":\"Modal_Modal__2jeRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__39etI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1sBRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1spxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__6BKqF\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = ({ target: { value } }) =>\r\n    this.setState({ query: value.toLowerCase() });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      return toast.error('Введите слово для поиска');\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({\r\n      query: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.button}>\r\n            <span className={s.buttonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.query}\r\n            className={s.input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ item, onClick }) => (\r\n  <li className={s.ImageGalleryItem}>\r\n    <img\r\n      onClick={e => {\r\n        onClick(e);\r\n      }}\r\n      data-largeimageurl={item.largeImageURL}\r\n      src={item.webformatURL}\r\n      alt={item.tags}\r\n      className={s.image}\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  item: PropTypes.shape({\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ items, onClick }) => (\r\n  <ul className={s.ImageGallery}>\r\n    {items.map(item => (\r\n      <ImageGalleryItem key={item.id} item={item} onClick={onClick} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport MyLoader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nexport default class Loader extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <MyLoader\r\n        className={s.spinner}\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDropClick = ({ target, currentTarget }) => {\r\n    if (target === currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { alt, url } = this.props.activeImage;\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackDropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={url} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  activeImage: PropTypes.shape({\r\n    alt: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button\r\n    type=\"button\"\r\n    className={s.Button}\r\n    onClick={() => {\r\n      onClick();\r\n    }}\r\n    {...allyProps}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","const apiKey = '18705092-a3d0db19a14bd823df17dac7b';\r\n\r\nconst fetchImages = ({ searchQuery = '', page = 1, pageSize = 12 }) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n  ).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Упс, произошла ошибка`));\r\n  });\r\n};\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\nimport pixabayApi from './services/pixabay-api';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    images: [],\n    page: 1,\n    activeImage: {},\n    showButton: false,\n    showModal: false,\n    showLoader: false,\n    error: null,\n    // status: 'idle',\n  };\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return true;\n  // }\n  // если возвращает false компонент не перерендеривается\n  // или просто использовать PureComponent\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.setState({ showLoader: true });\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      images: [],\n      page: 1,\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { page, searchQuery } = this.state;\n    const options = { searchQuery, page };\n\n    pixabayApi\n      .fetchImages(options)\n      .then(res => {\n        const { hits, totalHits } = res;\n\n        if (!!hits.length) {\n          toast.success('Запрос выполнен успешно');\n          this.setState(prevState => ({\n            images: [...prevState.images, ...hits],\n            showButton: true,\n            page: prevState.page + 1,\n          }));\n        }\n\n        if (!hits.length) {\n          toast.error(`По запросу \"${searchQuery}\" ничего не найдено`);\n        }\n\n        if (totalHits <= 12) {\n          this.setState({ showButton: false });\n        }\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({\n          showLoader: false,\n        });\n        window.scrollTo({\n          top: document.documentElement.offsetHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  openModal = ({ target }) => {\n    const { largeimageurl } = target.dataset;\n    const { alt } = target;\n    this.setState({\n      activeImage: {\n        url: largeimageurl,\n        alt: alt,\n      },\n    });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const {\n      // status,\n      images,\n      showModal,\n      showLoader,\n      showButton,\n      error,\n      activeImage,\n    } = this.state;\n\n    // if(status === 'idle'){\n    //   return <div>Please write something</div>\n    // }\n    // if(status === 'pending'){\n    //   return <Loader/>\n    // }\n    // if(status === 'rejected'){\n    //   return <h1>{error.message}</h1>;\n    // }\n    // if(status === 'resolved'){\n    //   return <ImageGallery items={images} />\n    // }\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {error && <h1>{error.message}</h1>}\n\n        {images && !error && (\n          <ImageGallery items={images} onClick={this.openModal} />\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal} activeImage={activeImage} />\n        )}\n\n        {showLoader && <Loader />}\n        {showButton && (\n          <Button onClick={this.fetchImages} aria-label=\"Load More\">\n            Load More\n          </Button>\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__BGQDQ\",\"SearchForm\":\"Searchbar_SearchForm__3yEN3\",\"button\":\"Searchbar_button__2p4at\",\"buttonLabel\":\"Searchbar_buttonLabel__1ob-C\",\"input\":\"Searchbar_input__1g0fA\"};"],"sourceRoot":""}